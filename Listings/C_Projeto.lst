C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:31:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE C_PROJETO
OBJECT MODULE PLACED IN .\Objects\C_Projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE C_Projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\C_Projeto.lst) OBJECT(.\Objects\C_Projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          sbit S1_Vermelho = P1^0; //porta de saída para a luz vermelha do semáforo S1
   4          sbit S1_Amarelo = P1^1; //porta de saída para a luz amarela do semáforo S1
   5          sbit S1_Verde = P1^2; //porta de saída para a luz verde do semáforo S1
   6          
   7          sbit S2_Vermelho = P1^3; //porta de saída para a luz vermelha do semáforo S2
   8          sbit S2_Amarelo = P1^4; //porta de saída para a luz amarela do semáforo S2
   9          sbit S2_Verde = P1^5;//porta de saída para a luz verde do semáforo S2
  10          
  11          sbit S3_Vermelho = P2^2; //porta de saída para a luz vermelha do semáforo S3
  12          sbit S3_Amarelo = P2^1; //porta de saída para a luz amarela do semáforo S3
  13          sbit S3_Verde = P2^0; //porta de saída para a luz verde do semáforo S3
  14          
  15          sbit P3_Vermelho = P2^4; //porta de saída para a luz vermelha do semáforo P3
  16          sbit P3_Verde = P2^3; //porta de saída para a luz verde do semáforo P3
  17          
  18          sbit B3= P3^2; //porta de entrada para pressionar o botão B3
  19          
  20          int contaTempoSemaforosCarros = 0;
  21          int contaTempoSemaforoPeoes = 0;
  22          int auxContaTempoSemaforosCarros = 0;
  23          int auxContaTempoSemaforoPeoes = 0;
  24          int auxIntermitente = 0;
  25          
  26          void iniciarTimers(void){
  27   1              //Ativar as interrupções globais e dos timers 0 e 1
  28   1              EA = 1;
  29   1              ET0 = 1;
  30   1              ET1 = 1;
  31   1              //Configurar os timers no modo 2 (8 bits autoreload)
  32   1              TMOD &= 0x00;
  33   1              TMOD |= 0x22;
  34   1              //Configurar o tempo de contagem 250 microsegundos
  35   1              TH0 = 0x06;
  36   1              TL0 = 0x06;
  37   1              TH1 = 0x06;
  38   1              TL1 = 0x06;
  39   1              //Iniciar timer 0 e 1
  40   1              TR0 = 1;
  41   1              TR1 = 1;
  42   1      }
  43          
  44          void iniciarSemaforos(void){
  45   1              S1_Verde = 1;
  46   1              S1_Amarelo = 0;
  47   1              S1_Vermelho = 0;
  48   1              S2_Verde = 1;
  49   1              S2_Amarelo = 0;
  50   1              S2_Vermelho = 0;
  51   1              S3_Verde = 0;
  52   1              S3_Amarelo = 0;
  53   1              S3_Vermelho = 1;
  54   1              P3_Verde = 1;
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:31:53 PAGE 2   

  55   1              P3_Vermelho = 0;
  56   1      }
  57          
  58          void Timer0_ISR(void) interrupt 1{
  59   1              if(auxContaTempoSemaforosCarros == 4000){
  60   2                      contaTempoSemaforosCarros++;
  61   2                      auxContaTempoSemaforosCarros = 0;
  62   2              }else{
  63   2                      auxContaTempoSemaforosCarros++;
  64   2              }
  65   1      }
  66          
  67          void Timer1_ISR(void) interrupt 3{
  68   1              if(auxContaTempoSemaforoPeoes == 4000){
  69   2                      contaTempoSemaforoPeoes++;
  70   2                      auxContaTempoSemaforoPeoes = 0;
  71   2              }else{
  72   2                      auxContaTempoSemaforoPeoes++;
  73   2              }
  74   1      }
  75          
  76          void main(void){
  77   1              iniciarTimers();
  78   1              for(;;){
  79   2                      //Contas = 1 -> 250 microsegundos
  80   2                      //Contas = 4 -> 1 milisegundo
  81   2                      //Contas = 20000 -> 5 segundos
  82   2                      //Contas = 40000 -> 10 segundos
  83   2                      //Contas = 60000 -> 15 segundos
  84   2                      if(contaTempoSemaforoPeoes == 0 && contaTempoSemaforosCarros == 0){
  85   3                              iniciarSemaforos();
  86   3                      }
  87   2                      
  88   2                      if(contaTempoSemaforosCarros == 10){
  89   3                              S1_Amarelo = 1;
  90   3                              S2_Amarelo = 1;
  91   3                              S1_Verde = 0;
  92   3                              S2_Verde = 0;
  93   3                      }
  94   2                      if(contaTempoSemaforoPeoes >= 10 &&contaTempoSemaforoPeoes <15){
  95   3                              if(contaTempoSemaforoPeoes % 2 ==0 && auxIntermitente==0){
  96   4                                      auxIntermitente=1;
  97   4                                      P3_Verde = ~P3_Verde;
  98   4                              }
  99   3                              if(contaTempoSemaforoPeoes % 2 !=0&& auxIntermitente==1){
 100   4                                      auxIntermitente=0;
 101   4                                      P3_Verde = ~P3_Verde;
 102   4                              }
 103   3                      }
 104   2                      if(contaTempoSemaforoPeoes == 15){
 105   3                              P3_Verde = 0;
 106   3                              P3_Vermelho = 1;
 107   3                      }
 108   2                      if(contaTempoSemaforosCarros == 15){
 109   3                              S3_Verde = 1;
 110   3                              S3_Vermelho = 0;
 111   3                              S1_Vermelho = 1;
 112   3                              S1_Amarelo = 0;
 113   3                              S2_Vermelho = 1;
 114   3                              S2_Amarelo = 0;
 115   3                      }
 116   2                      if(contaTempoSemaforosCarros == 25){
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:31:53 PAGE 3   

 117   3                              S3_Amarelo = 1;
 118   3                              S3_Verde = 0;
 119   3                      }
 120   2                      if(contaTempoSemaforosCarros == 30){
 121   3                              contaTempoSemaforosCarros = 0;
 122   3                              contaTempoSemaforoPeoes = 0;
 123   3                      }
 124   2              }
 125   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    309    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
