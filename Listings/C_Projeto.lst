C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 16:53:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE C_PROJETO
OBJECT MODULE PLACED IN .\Objects\C_Projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE C_Projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\C_Projeto.lst) TABS(2) OBJECT(.\Objects\C_Projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          sbit S1_Vermelho = P1^0; //porta de saída para a luz vermelha do semáforo S1
   4          sbit S1_Amarelo = P1^1; //porta de saída para a luz amarela do semáforo S1
   5          sbit S1_Verde = P1^2; //porta de saída para a luz verde do semáforo S1
   6          
   7          sbit S2_Vermelho = P1^3; //porta de saída para a luz vermelha do semáforo S2
   8          sbit S2_Amarelo = P1^4; //porta de saída para a luz amarela do semáforo S2
   9          sbit S2_Verde = P1^5;//porta de saída para a luz verde do semáforo S2
  10          
  11          sbit S3_Vermelho = P2^2; //porta de saída para a luz vermelha do semáforo S3
  12          sbit S3_Amarelo = P2^1; //porta de saída para a luz amarela do semáforo S3
  13          sbit S3_Verde = P2^0; //porta de saída para a luz verde do semáforo S3
  14          
  15          sbit P3_Vermelho = P2^4; //porta de saída para a luz vermelha do semáforo P3
  16          sbit P3_Verde = P2^3; //porta de saída para a luz verde do semáforo P3
  17          
  18          sbit B3= P3^2; //porta de entrada para pressionar o botão B3
  19          
  20          int contaTempoSemaforosCarros = 0;
  21          int auxContaTempoSemaforosCarros = 0;
  22          int auxIntermitente = 0;
  23          
  24          void iniciarTimers(void){
  25   1        //Ativar as interrupções globais e dos timers 0 e 1
  26   1        EA = 1;
  27   1        ET0 = 1;
  28   1        EX0 = 1;
  29   1        //Configurar os timers no modo 2 (8 bits autoreload)
  30   1        TMOD &= 0xF0;
  31   1        TMOD |= 0x02;
  32   1        //Configurar o tempo de contagem 250 microsegundos
  33   1        TH0 = 0x06;
  34   1        TL0 = 0x06;
  35   1        //Iniciar timer 0 e 1
  36   1        TR0 = 1;
  37   1        IT0 = 1;
  38   1      }
  39          
  40          void iniciarSemaforos(void){
  41   1        S1_Verde = 0;
  42   1        S1_Amarelo = 1;
  43   1        S1_Vermelho = 1;
  44   1        S2_Verde = 0;
  45   1        S2_Amarelo = 1;
  46   1        S2_Vermelho = 1;
  47   1        S3_Verde = 1;
  48   1        S3_Amarelo = 1;
  49   1        S3_Vermelho = 0;
  50   1        P3_Verde = 0;
  51   1        P3_Vermelho = 1;
  52   1      }
  53          
  54          void Timer0_ISR(void) interrupt 1{
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 16:53:45 PAGE 2   

  55   1        if(auxContaTempoSemaforosCarros == 4000){
  56   2          contaTempoSemaforosCarros++;
  57   2          auxContaTempoSemaforosCarros = 0;
  58   2        }else{
  59   2          auxContaTempoSemaforosCarros++;
  60   2        }
  61   1      }
  62          
  63          
  64          void External0_ISR(void) interrupt 0 {
  65   1        if (S3_Verde == 0){
  66   2          contaTempoSemaforosCarros = 25;
  67   2          auxContaTempoSemaforosCarros = 0;
  68   2        }
  69   1        
  70   1      }
  71          
  72          
  73          void main(void){
  74   1        iniciarTimers();
  75   1        for(;;){
  76   2          //Contas = 1 -> 250 microsegundos
  77   2          //Contas = 4 -> 1 milisegundo
  78   2          //Contas = 20000 -> 5 segundos
  79   2          //Contas = 40000 -> 10 segundos
  80   2          //Contas = 60000 -> 15 segundos
  81   2          if(contaTempoSemaforosCarros == 0){
  82   3            iniciarSemaforos();
  83   3          }
  84   2          
  85   2          if(contaTempoSemaforosCarros == 10){
  86   3            S1_Amarelo = 0;
  87   3            S2_Amarelo = 0;
  88   3            S1_Verde = 1;
  89   3            S2_Verde = 1;
  90   3          }
  91   2          if(contaTempoSemaforosCarros >= 10 &&contaTempoSemaforosCarros <15){
  92   3            if(contaTempoSemaforosCarros % 2 ==0 && auxIntermitente==0){
  93   4              auxIntermitente=1;
  94   4              P3_Verde = ~P3_Verde;
  95   4            }
  96   3            if(contaTempoSemaforosCarros % 2 !=0&& auxIntermitente==1){
  97   4              auxIntermitente=0;
  98   4              P3_Verde = ~P3_Verde;
  99   4            }
 100   3          }
 101   2          
 102   2          if(contaTempoSemaforosCarros == 15){
 103   3            S3_Verde = 0;
 104   3            S3_Vermelho = 1;
 105   3            S1_Vermelho = 0;
 106   3            S1_Amarelo = 1;
 107   3            S2_Vermelho = 0;
 108   3            S2_Amarelo = 1;
 109   3            P3_Verde = 1;
 110   3            P3_Vermelho = 0;
 111   3          }
 112   2          
 113   2          if(contaTempoSemaforosCarros == 25){
 114   3            S3_Amarelo = 0;
 115   3            S3_Verde = 1;
 116   3          }
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 16:53:45 PAGE 3   

 117   2          
 118   2          if(contaTempoSemaforosCarros == 30){
 119   3            contaTempoSemaforosCarros = 0;
 120   3          }
 121   2        }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    258    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
