C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/17/2020 12:04:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE C_PROJETO
OBJECT MODULE PLACED IN .\Objects\C_Projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE C_Projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\C_Projeto.lst) OBJECT(.\Objects\C_Projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          sbit S1_Vermelho = P1^0; //porta de saÃ­da para a luz vermelha do semÃ¡foro S1
   4          sbit S1_Amarelo = P1^1; //porta de saÃ­da para a luz amarela do semÃ¡foro S1
   5          sbit S1_Verde = P1^2; //porta de saÃ­da para a luz verde do semÃ¡foro S1
   6          
   7          sbit S2_Vermelho = P1^3; //porta de saÃ­da para a luz vermelha do semÃ¡foro S2
   8          sbit S2_Amarelo = P1^4; //porta de saÃ­da para a luz amarela do semÃ¡foro S2
   9          sbit S2_Verde = P1^5;//porta de saÃ­da para a luz verde do semÃ¡foro S2
  10          
  11          sbit S3_Vermelho = P2^2; //porta de saÃ­da para a luz vermelha do semÃ¡foro S3
  12          sbit S3_Amarelo = P2^1; //porta de saÃ­da para a luz amarela do semÃ¡foro S3
  13          sbit S3_Verde = P2^0; //porta de saÃ­da para a luz verde do semÃ¡foro S3
  14          
  15          sbit P3_Vermelho = P2^4; //porta de saÃ­da para a luz vermelha do semÃ¡foro P3
  16          sbit P3_Verde = P2^3; //porta de saÃ­da para a luz verde do semÃ¡foro P3
  17          
  18          sbit B3= P3^2; //porta de entrada para pressionar o botÃ£o B3
  19          
  20          int contaSegundos = 0; //esta variÃ¡vel Ã© igual ao nÃºmero de segundos que passou deste o inÃ­cio do cicl
             -o
  21          int auxContaSegundos = 0; //esta variÃ¡vel conta o nÃºmero de vezes que ocorre overflow no timer (que ocor
             -re quando passam 250 microsegundos
  22          int auxMudarSemaforos = 1; //variÃ¡vel "booleana" para evitar estar sempre a definir os semÃ¡foros
  23          
  24          //*****************IMPORTANTE************************
  25          //0 - LED ligado
  26          //1 - LED desligado
  27          
  28          void Inicializar(void){
  29   1              //Ativar as interrupÃ§Ãµes globais, do timer 0 e da interrupÃ§Ã£o externa 0
  30   1              EA = 1;
  31   1              ET0 = 1;
  32   1              EX0 = 1;
  33   1              //Configurar o timer no modo 2 (8 bits autoreload)
  34   1              TMOD &= 0xF0;
  35   1              TMOD |= 0x02;
  36   1              //Configurar o tempo de contagem para 250 microsegundos
  37   1              TH0 = 0x06;
  38   1              TL0 = 0x06;
  39   1              //Iniciar timer 0 e definir a interrupÃ§Ã£o para ser acionada na falling edge
  40   1              TR0 = 1;
  41   1              IT0 = 1; 
  42   1      }
  43          void Timer0_ISR(void) interrupt 1{
  44   1                      //auxContaSegundos = 1 -> 250 microsegundos
  45   1                      //auxContaSegundos = 4 -> 1 milisegundo
  46   1                      //auxContaSegundos = 4000 -> 1 segundo
  47   1              if(auxContaSegundos == 4000){ //quando esta variÃ¡vel chegar a 4000, significa que fez-se um segundo
  48   2                      contaSegundos++;
  49   2                      auxContaSegundos = 0; //reset da variÃ¡vel
  50   2                      auxMudarSemaforos = 1; //como o contaSegundos aumentou, definimos isto a 1 para efetuar as verificaÃ§Ãµe
             -s
  51   2              }else{ //se nÃ£o chegou, incrementa-se a variÃ¡vel
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/17/2020 12:04:59 PAGE 2   

  52   2                      auxContaSegundos++;
  53   2              }
  54   1      }
  55          
  56          
  57          void External0_ISR(void) interrupt 0 {
  58   1              if (S3_Verde == 0){ //verifica-se se o sinal verde do semÃ¡foro S3 estÃ¡ ligado
  59   2                      contaSegundos = 25; //se estiver define-se o contasegundos a 25 pois Ã© neste momento que se pÃµe o semÃ
             -¡foro 3 a amarelo como pretendido
  60   2                      auxContaSegundos = 0; //reset da variÃ¡vel que conta os overflows do timer, de modo a passar 5 segundos 
             -a partir do botÃ£o ser clicado
  61   2                      auxMudarSemaforos = 1; //como o contaSegundos mudou, definimos isto a 1 para efetuar as verificaÃ§Ãµes
  62   2              }
  63   1              
  64   1      }
  65          
  66          
  67          void main(void){
  68   1              Inicializar();
  69   1              for(;;){
  70   2                      if (auxMudarSemaforos==1){
  71   3                              if(contaSegundos == 0){ //parte inicial do ciclo, S1 e S2 verdes, S3 vermelho, P3 verde
  72   4                                      S1_Verde = 0;
  73   4                                      S1_Amarelo = 1;
  74   4                                      S1_Vermelho = 1;
  75   4                                      S2_Verde = 0;
  76   4                                      S2_Amarelo = 1;
  77   4                                      S2_Vermelho = 1;
  78   4                                      S3_Verde = 1;
  79   4                                      S3_Amarelo = 1;
  80   4                                      S3_Vermelho = 0;
  81   4                                      P3_Verde = 0;
  82   4                                      P3_Vermelho = 1;
  83   4                                      auxMudarSemaforos=0; //mudar isto para 0 para nÃ£o fazer as verificaÃ§Ãµes atÃ© o contaSegundos increm
             -entar
  84   4                              }
  85   3                              
  86   3                              if(contaSegundos == 10){ //depois de 10 segundos, S1 e S2 fiam amarelos
  87   4                                      S1_Amarelo = 0;
  88   4                                      S2_Amarelo = 0;
  89   4                                      S1_Verde = 1;
  90   4                                      S2_Verde = 1;
  91   4                                      auxMudarSemaforos=0; //mudar isto para 0 para nÃ£o fazer as verificaÃ§Ãµes atÃ© o contaSegundos increm
             -entar
  92   4                              }
  93   3                              if(contaSegundos >= 10 &&contaSegundos <15){ //entre os 10 e 15 segundos, o semÃ¡foro P3 deve ficar ver
             -de intermitente, a cada segundo
  94   4                                      P3_Verde = ~P3_Verde;
  95   4                                      auxMudarSemaforos=0; //mudar isto para 0 para nÃ£o fazer as verificaÃ§Ãµes atÃ© o contaSegundos increm
             -entar
  96   4                              }
  97   3                              
  98   3                              if(contaSegundos == 15){ //depois de 15 segundos, S1 e S2 ficam vermelhos, S3 fica verde e P3 fica verm
             -elho
  99   4                                      S3_Verde = 0;
 100   4                                      S3_Vermelho = 1;
 101   4                                      S1_Vermelho = 0;
 102   4                                      S1_Amarelo = 1;
 103   4                                      S2_Vermelho = 0;
 104   4                                      S2_Amarelo = 1;
 105   4                                      P3_Verde = 1;
 106   4                                      P3_Vermelho = 0;
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/17/2020 12:04:59 PAGE 3   

 107   4                                      auxMudarSemaforos=0; //mudar isto para 0 para nÃ£o fazer as verificaÃ§Ãµes atÃ© o contaSegundos increm
             -entar
 108   4                              }
 109   3                              
 110   3                              if(contaSegundos == 25){ //depois de 25 segundos, S3 fica amarelo
 111   4                                      S3_Amarelo = 0;
 112   4                                      S3_Verde = 1;
 113   4                                      auxMudarSemaforos=0; //mudar isto para 0 para nÃ£o fazer as verificaÃ§Ãµes atÃ© o contaSegundos increm
             -entar
 114   4                              }
 115   3                              
 116   3                              if(contaSegundos == 30){ //depois dos 30 segundos, faz-se reset da variÃ¡vel para voltarmos ao inÃ­cio 
             -do ciclo e tratar dos semÃ¡foros
 117   4                                      contaSegundos = 0; 
 118   4                              }
 119   3                      }
 120   2              }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    251    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
