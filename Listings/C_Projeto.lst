C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:45:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE C_PROJETO
OBJECT MODULE PLACED IN .\Objects\C_Projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE C_Projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\C_Projeto.lst) TABS(2) OBJECT(.\Objects\C_Projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          sbit S1_Vermelho = P1^0; //porta de saída para a luz vermelha do semáforo S1
   4          sbit S1_Amarelo = P1^1; //porta de saída para a luz amarela do semáforo S1
   5          sbit S1_Verde = P1^2; //porta de saída para a luz verde do semáforo S1
   6          
   7          sbit S2_Vermelho = P1^3; //porta de saída para a luz vermelha do semáforo S2
   8          sbit S2_Amarelo = P1^4; //porta de saída para a luz amarela do semáforo S2
   9          sbit S2_Verde = P1^5;//porta de saída para a luz verde do semáforo S2
  10          
  11          sbit S3_Vermelho = P2^2; //porta de saída para a luz vermelha do semáforo S3
  12          sbit S3_Amarelo = P2^1; //porta de saída para a luz amarela do semáforo S3
  13          sbit S3_Verde = P2^0; //porta de saída para a luz verde do semáforo S3
  14          
  15          sbit P3_Vermelho = P2^4; //porta de saída para a luz vermelha do semáforo P3
  16          sbit P3_Verde = P2^3; //porta de saída para a luz verde do semáforo P3
  17          
  18          sbit B3= P3^2; //porta de entrada para pressionar o botão B3
  19          
  20          int contaTempoSemaforosCarros = 0;
  21          int contaTempoSemaforoPeoes = 0;
  22          int auxContaTempoSemaforosCarros = 0;
  23          int auxContaTempoSemaforoPeoes = 0;
  24          int auxIntermitente = 0;
  25          int botaoPeoes = 0;
  26          
  27          void iniciarTimers(void){
  28   1        //Ativar as interrupções globais e dos timers 0 e 1
  29   1        EA = 1;
  30   1        ET0 = 1;
  31   1        ET1 = 1;
  32   1        EX0 = 1;
  33   1        //Configurar os timers no modo 2 (8 bits autoreload)
  34   1        TMOD &= 0x00;
  35   1        TMOD |= 0x22;
  36   1        //Configurar o tempo de contagem 250 microsegundos
  37   1        TH0 = 0x06;
  38   1        TL0 = 0x06;
  39   1        TH1 = 0x06;
  40   1        TL1 = 0x06;
  41   1        //Iniciar timer 0 e 1
  42   1        TR0 = 1;
  43   1        TR1 = 1;
  44   1        IT0 = 1;
  45   1      }
  46          
  47          void iniciarSemaforos(void){
  48   1        S1_Verde = 1;
  49   1        S1_Amarelo = 0;
  50   1        S1_Vermelho = 0;
  51   1        S2_Verde = 1;
  52   1        S2_Amarelo = 0;
  53   1        S2_Vermelho = 0;
  54   1        S3_Verde = 0;
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:45:30 PAGE 2   

  55   1        S3_Amarelo = 0;
  56   1        S3_Vermelho = 1;
  57   1        P3_Verde = 1;
  58   1        P3_Vermelho = 0;
  59   1      }
  60          
  61          void Timer0_ISR(void) interrupt 1{
  62   1        if(auxContaTempoSemaforosCarros == 4000){
  63   2          contaTempoSemaforosCarros++;
  64   2          auxContaTempoSemaforosCarros = 0;
  65   2        }else{
  66   2          auxContaTempoSemaforosCarros++;
  67   2        }
  68   1      }
  69          
  70          void Timer1_ISR(void) interrupt 3{
  71   1        if(auxContaTempoSemaforoPeoes == 4000){
  72   2          contaTempoSemaforoPeoes++;
  73   2          auxContaTempoSemaforoPeoes = 0;
  74   2        }else{
  75   2          auxContaTempoSemaforoPeoes++;
  76   2        }
  77   1      }
  78          
  79          void External0_ISR(void) interrupt 0 {
  80   1        if (S3_Verde == 1){
  81   2          contaTempoSemaforosCarros = 25;
  82   2          contaTempoSemaforoPeoes = 25;
  83   2          auxContaTempoSemaforoPeoes = 0;
  84   2          auxContaTempoSemaforosCarros = 0;
  85   2        }
  86   1        
  87   1      }
  88          
  89          
  90          void main(void){
  91   1        iniciarTimers();
  92   1        for(;;){
  93   2          //Contas = 1 -> 250 microsegundos
  94   2          //Contas = 4 -> 1 milisegundo
  95   2          //Contas = 20000 -> 5 segundos
  96   2          //Contas = 40000 -> 10 segundos
  97   2          //Contas = 60000 -> 15 segundos
  98   2          if(contaTempoSemaforoPeoes == 0 && contaTempoSemaforosCarros == 0){
  99   3            iniciarSemaforos();
 100   3          }
 101   2          
 102   2          if(contaTempoSemaforosCarros == 10){
 103   3            S1_Amarelo = 1;
 104   3            S2_Amarelo = 1;
 105   3            S1_Verde = 0;
 106   3            S2_Verde = 0;
 107   3          }
 108   2          if(contaTempoSemaforoPeoes >= 10 &&contaTempoSemaforoPeoes <15){
 109   3            if(contaTempoSemaforoPeoes % 2 ==0 && auxIntermitente==0){
 110   4              auxIntermitente=1;
 111   4              P3_Verde = ~P3_Verde;
 112   4            }
 113   3            if(contaTempoSemaforoPeoes % 2 !=0&& auxIntermitente==1){
 114   4              auxIntermitente=0;
 115   4              P3_Verde = ~P3_Verde;
 116   4            }
C51 COMPILER V9.60.0.0   C_PROJETO                                                         05/16/2020 14:45:30 PAGE 3   

 117   3          }
 118   2          if(contaTempoSemaforoPeoes == 15){
 119   3            P3_Verde = 0;
 120   3            P3_Vermelho = 1;
 121   3          }
 122   2          if(contaTempoSemaforosCarros == 15){
 123   3            S3_Verde = 1;
 124   3            S3_Vermelho = 0;
 125   3            S1_Vermelho = 1;
 126   3            S1_Amarelo = 0;
 127   3            S2_Vermelho = 1;
 128   3            S2_Amarelo = 0;
 129   3          }
 130   2          if(contaTempoSemaforosCarros == 25){
 131   3            S3_Amarelo = 1;
 132   3            S3_Verde = 0;
 133   3          }
 134   2          if(contaTempoSemaforosCarros == 30){
 135   3            contaTempoSemaforosCarros = 0;
 136   3            contaTempoSemaforoPeoes = 0;
 137   3          }
 138   2        }
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
